catch.hpp:5637:19: warning: The struct 'LazyStat < TestRunInfo >' defines member function with name 'operator=' also defined in its parent class 'Option < TestRunInfo >'. [duplInheritedMember]
        LazyStat& operator=( T const& _value ) {
                  ^
catch.hpp:3175:17: note: Parent function 'Option < TestRunInfo >::operator='
        Option& operator = ( T const& _value ) {
                ^
catch.hpp:5637:19: note: Derived function 'LazyStat < TestRunInfo >::operator='
        LazyStat& operator=( T const& _value ) {
                  ^
catch.hpp:5642:14: warning: The struct 'LazyStat < TestRunInfo >' defines member function with name 'reset' also defined in its parent class 'Option < TestRunInfo >'. [duplInheritedMember]
        void reset() {
             ^
catch.hpp:3181:14: note: Parent function 'Option < TestRunInfo >::reset'
        void reset() {
             ^
catch.hpp:5642:14: note: Derived function 'LazyStat < TestRunInfo >::reset'
        void reset() {
             ^
catch.hpp:5637:19: warning: The struct 'LazyStat < GroupInfo >' defines member function with name 'operator=' also defined in its parent class 'Option < GroupInfo >'. [duplInheritedMember]
        LazyStat& operator=( T const& _value ) {
                  ^
catch.hpp:3175:17: note: Parent function 'Option < GroupInfo >::operator='
        Option& operator = ( T const& _value ) {
                ^
catch.hpp:5637:19: note: Derived function 'LazyStat < GroupInfo >::operator='
        LazyStat& operator=( T const& _value ) {
                  ^
catch.hpp:5642:14: warning: The struct 'LazyStat < GroupInfo >' defines member function with name 'reset' also defined in its parent class 'Option < GroupInfo >'. [duplInheritedMember]
        void reset() {
             ^
catch.hpp:3181:14: note: Parent function 'Option < GroupInfo >::reset'
        void reset() {
             ^
catch.hpp:5642:14: note: Derived function 'LazyStat < GroupInfo >::reset'
        void reset() {
             ^
catch.hpp:5637:19: warning: The struct 'LazyStat < TestCaseInfo >' defines member function with name 'operator=' also defined in its parent class 'Option < TestCaseInfo >'. [duplInheritedMember]
        LazyStat& operator=( T const& _value ) {
                  ^
catch.hpp:3175:17: note: Parent function 'Option < TestCaseInfo >::operator='
        Option& operator = ( T const& _value ) {
                ^
catch.hpp:5637:19: note: Derived function 'LazyStat < TestCaseInfo >::operator='
        LazyStat& operator=( T const& _value ) {
                  ^
catch.hpp:5642:14: warning: The struct 'LazyStat < TestCaseInfo >' defines member function with name 'reset' also defined in its parent class 'Option < TestCaseInfo >'. [duplInheritedMember]
        void reset() {
             ^
catch.hpp:3181:14: note: Parent function 'Option < TestCaseInfo >::reset'
        void reset() {
             ^
catch.hpp:5642:14: note: Derived function 'LazyStat < TestCaseInfo >::reset'
        void reset() {
             ^
catch.hpp:2755:25: error: Rethrowing current exception with 'throw;', it seems there is no current exception to rethrow. If there is no current exception this calls std::terminate(). More: https://isocpp.org/wiki/faq/exceptions#throw-without-an-object [rethrowNoCurrentException]
                        throw;
                        ^
catch.hpp:7563:17: error: Rethrowing current exception with 'throw;', it seems there is no current exception to rethrow. If there is no current exception this calls std::terminate(). More: https://isocpp.org/wiki/faq/exceptions#throw-without-an-object [rethrowNoCurrentException]
                throw;
                ^
catch.hpp:3350:20: error: syntax error: =[...]; [syntaxError]
            id obj = [[m_cls alloc] init];
                   ^
nofile:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 configurations. Use --force to check all configurations. For more details, use --enable=information. [toomanyconfigs]

